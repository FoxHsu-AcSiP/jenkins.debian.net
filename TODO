ToDo for jenkins.debian.net
===========================
:Author:           Holger Levsen
:Authorinitials:   holger
:EMail:            holger@layer-acht.org
:Status:           in progress
:lang:             en
:Doctype:          article
:Licence:	   GPLv2

== About jenkins.debian.net

See link:http://jenkins.debian.net/userContent/about.html["about jenkins.debian.net"].

== General ToDo

* general housekeeping job:
** run calamaris, visitors etc
** check for stale processes
** check for apt-upgrades
** check for jobs forgetting their triggers
* describe jobs in README
* support for gitweb in jobs 
** needs clean merge of my patches to jenkins-job-builder first...
* get rid of some reduncacy in job-cfg/*.yaml 
* add documentation for jenkins-job-builder and send pull requests on github:
** publisher:logparse
** publisher:htmlpublisher
** svn:scm
** properties: sidebar
* file a bug about jenkins/jenkins-job-builder sometimes "forgetting" about triggers
* mail notifications (to where?)
* proper backup (=daily), see bottom of this document for what to backup
* proper git repo url, outside users/holger
** same for /srv/jenkins.debian.net-scm-sync.git
* only trigger (=really run) jobs if available+used packages have changed (save packages in db and compare)
* update jdk
* fully automate backup and full backup /var/lib/jenkins/jobs and /var/lib/munin and /var/log too
* try awstats

== More tests to be run

=== Tests for supporting d-i development:

* try http://www.os-autoinst.org/
* html_publisher doesn't make the results of d-i_manual_* available
* svn:trunk:packages/po/* triggers nothing
* notify debian-boot@l.d.o and #debian-boot about jenkins jobs results
* run scripts/digress/
* bubulle wrote: "Another interesting target would be d-i builds *including non uploaded packages* (something like "d-i from git repositories" images). That would in some way require to create a quite specific image, with all udebs (while netboot only has udebs needed before one gets a working network setup).
* check if there are new languages for the manual and remind to create jobs

=== Test cd-images:

* start client VMs using the profitbricks API: https://www.profitbricks.com/us/media/docs/PB_PublicAPI_EN.pdf (and dhcp)
** or probably just run kvm...
* to test (at first) weekly images of amd64 std,kde,lxde+xfce weekly and the first sid-di daily
** http://cdimage.debian.org/cdimage/weekly-builds/amd64/jigdo-cd/
** http://cdimage.debian.org/cdimage/daily-builds/sid_d-i/20121020-1/amd64/
* use jigdo to download those images

=== Test tasks:

* test installations with (at least) more language tasks enabled, though tasksel doesn't work like this:

----
<h01ger> how do i install a task outside d-i?
<h01ger> what interesting tasks are there?
<jcristau> tasksel install <task>
<daemonkeeper> h01ger:  http://packages.debian.org/source/sid/tasksel
----

Help explaining how to test tasks (ie all the language tasks) very much welcome!

=== Tests using autopkgtest

* I aware but also lost, after looking at /usr/share/doc/autopkgtest/ - wanna help?
* https://wiki.ubuntu.com/AutomatedTesting has more information, but help is still welcome to implement this.
* finding packages with autopkgtests: http://lists.debian.org/debian-qa/2012/11/msg00012.html
** this only lists a few packages, so a very first test could be to compare this list against this: `wget -q http://http.debian.net/debian/dists/unstable/main/Contents-source.gz -O- | zgrep -m1 -E '^debian/tests/control\s'`, make a job out of it and make it UNSTABLE if the diff is non-zero. And as a second step, run those tests...
* also see http://dep.debian.net/deps/dep8/
